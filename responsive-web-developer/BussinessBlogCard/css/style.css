@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
:root {
    --blue-dark: #111729;
    --blue: #677489;
    --blue-light: #F2F5F9;
    --white: #fff;
}

* {
    margin-top: 0;
    /* box-sizing: content-box; */
}

body {
    background-color: var(--blue-light);
    color: var(--blue-dark);
    font-family: 'Lato', sans-serif;
    /* font-family: 'Poppins', sans-serif; */

    display: flex;
    justify-content: center;
    align-items: center;
}

.card {
    background-color: var(--white);
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 33%;

    border-radius: 1rem;
}

.card-image {
    position: relative;
}

.h-image {
    border-radius: 1rem 1rem 0 0;
}

/* Absolute positioning is the one which can trick developers. It is working like the fixed positioning, but it is not positioned relatively to the viewport, but instead it is positioned based on the closest positioned element */
.h-cover {
    position: absolute;
    bottom: -1px;
}

.card-text {
    padding: 1rem 2rem;
    display: flex;
    flex-direction: column;
    gap: .75rem;
}

.card-text > .title {
    font-family: 'Poppins', sans-serif;
    font-size: 1.5rem;
}

.card-text > .text {
    color: var(--blue);
}

.profile {
    display: flex;
    padding: 1rem 2rem;
    align-items: center;
    gap: 1rem;
}

.profile-image {
    width: 15%;
    border: .25rem var(--blue-light) solid;
    border-radius: 100%;
}

.profile-info {
    font-size: .75rem;
    color:var(--blue)
}